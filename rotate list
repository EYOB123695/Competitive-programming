# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution(object):
    def rotateRight(self, head, k):
        """
        :type head: ListNode
        :type k: int
        :rtype: ListNode
        """
        if not head :
            return head
        l, tail = 1, head 
        while tail.next:
            tail=tail.next
            l+=1

        k = k % l
        if k == 0 :
            return head 
        cur = head
        for i in range(l - k - 1):
            cur = cur.next
        a=cur.next

        cur.next = None 
        tail.next = head 
        return  a
